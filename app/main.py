from fastapi import FastAPI, Form, UploadFile, File, Request, Response
from fastapi.responses import HTMLResponse, JSONResponse
from fastapi.staticfiles import StaticFiles
from typing import Annotated
import os
import uuid
from datetime import datetime, timedelta
from app.models import Movietop

app = FastAPI()

# –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
UPLOAD_DIR = "uploads"
os.makedirs(UPLOAD_DIR, exist_ok=True)

# –ú–æ–Ω—Ç–∏—Ä—É–µ–º –ø–∞–ø–∫—É –¥–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
app.mount("/uploads", StaticFiles(directory=UPLOAD_DIR), name="uploads")

# –ü—Ä–æ—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
users = {
    "admin": "password123",
    "user": "user123"
}

# –•—Ä–∞–Ω–∏–ª–∏—â–µ —Å–µ—Å—Å–∏–π –≤ –ø–∞–º—è—Ç–∏
sessions = {}

# –í—Ä–µ–º—è –∂–∏–∑–Ω–∏ —Å–µ—Å—Å–∏–∏ - 2 –º–∏–Ω—É—Ç—ã
SESSION_TIME = 120

study_html = """
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–£—á–µ–±–Ω–æ–µ –∑–∞–≤–µ–¥–µ–Ω–∏–µ - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</title>
</head>
<body>
    <h1>–ë—Ä—è–Ω—Å–∫–∏–π –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω–∂–µ–Ω–µ—Ä–Ω–æ-—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç</h1>
    <p>–ë—Ä—è–Ω—Å–∫–∏–π –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω–∂–µ–Ω–µ—Ä–Ω–æ-—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç (–ë–ì–ò–¢–£) ‚Äî –≤—ã—Å—à–µ–µ —É—á–µ–±–Ω–æ–µ –∑–∞–≤–µ–¥–µ–Ω–∏–µ –ë—Ä—è–Ω—Å–∫–∞. –ì–æ—Ç–æ–≤–∏—Ç –∫–∞–¥—Ä—ã 
    –¥–ª—è –ª–µ—Å–Ω–æ–≥–æ —Ö–æ–∑—è–π—Å—Ç–≤–∞ –∏ –ª–µ—Å–æ–ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ–≥–æ –∫–æ–º–ø–ª–µ–∫—Å–∞, –¥–ª—è –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ–≥–æ –∏ –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–æ–≥–æ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞. –í—ã–ø—É—Å–∫–∞–µ—Ç —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ 
    –≤ –æ–±–ª–∞—Å—Ç–∏ –∏–Ω–∂–µ–Ω–µ—Ä–Ω–æ–π —ç–∫–æ–ª–æ–≥–∏–∏, –ª–∞–Ω–¥—à–∞—Ñ—Ç–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã, –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏ –º—É–Ω–∏—Ü–∏–ø–∞–ª—å–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è, —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –¥–µ—Ä–µ–≤–æ–æ–±—Ä–∞–±–æ—Ç–∫–∏, 
    —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω—ã—Ö –¥–æ—Ä–æ–≥, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å–∏—Å—Ç–µ–º. 
    </p>
    <img src="https://avatars.mds.yandex.net/get-altay/1678797/2a00000169243856fe21aa73fa990f4d0c35/XXL_height">
</body>
</html>
"""

# HTML —Ñ–æ—Ä–º–∞ –¥–ª—è –≤—Ö–æ–¥–∞
login_html = """
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É</title>
</head>
<body>
    <h1>–í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É</h1>
    <form action="/login" method="post">
        <div>
            <label for="username">–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</label><br>
            <input type="text" id="username" name="username" required>
        </div>
        
        <div>
            <label for="password">–ü–∞—Ä–æ–ª—å:</label><br>
            <input type="password" id="password" name="password" required>
        </div>
        
        <br>
        <button type="submit">–í–æ–π—Ç–∏</button>
    </form>
    <p><small>–¢–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: admin/password123 –∏–ª–∏ user/user123</small></p>
    <br>
    <a href="/user">–ü–µ—Ä–µ–π—Ç–∏ –≤ –ø—Ä–æ—Ñ–∏–ª—å (–ø–æ—Å–ª–µ –≤—Ö–æ–¥–∞)</a>
</body>
</html>
"""

#html —Å —Ñ–æ—Ä–º–æ–π –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–∏–ª—å–º–æ–≤
add_movie_html = """
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Ñ–∏–ª—å–º</title>
</head>
<body>
    <h1>–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Ñ–∏–ª—å–º</h1>
    <form action="/add-movie/" method="post" enctype="multipart/form-data">
        <div>
            <label for="name">–ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞:</label><br>
            <input type="text" id="name" name="name" required>
        </div>
        
        <div>
            <label for="director">–†–µ–∂–∏—Å—Å–µ—Ä:</label><br>
            <input type="text" id="director" name="director" required>
        </div>
        
        <div>
            <label for="cost">–ë—é–¥–∂–µ—Ç —Ñ–∏–ª—å–º–∞:</label><br>
            <input type="number" id="cost" name="cost" min="0" required>
        </div>
        
        <div>
            <label for="description_file">–û–ø–∏—Å–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞ (—Ñ–∞–π–ª .txt):</label><br>
            <input type="file" id="description_file" name="description_file" accept=".txt">
        </div>
        
        <div>
            <label for="image">–û–±–ª–æ–∂–∫–∞ —Ñ–∏–ª—å–º–∞:</label><br>
            <input type="file" id="image" name="image" accept="image/*">
        </div>
        
        <div>
            <input type="checkbox" id="is_oscar_winner" name="is_oscar_winner" value="true">
            <label for="is_oscar_winner">–õ–∞—É—Ä–µ–∞—Ç –ø—Ä–µ–º–∏–∏ –û—Å–∫–∞—Ä</label>
        </div>
        
        <br>
        <button type="submit">–î–æ–±–∞–≤–∏—Ç—å —Ñ–∏–ª—å–º</button>
    </form>
    <br>
    <a href="/movies-with-images/">–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ —Ñ–∏–ª—å–º—ã —Å –æ–±–ª–æ–∂–∫–∞–º–∏</a>
    <br>
    <a href="/login">–í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É</a>
</body>
</html>
"""

movies_data = [
    Movietop(name = "–û–¥–Ω–∞–∂–¥—ã –≤ –ì–æ–ª–ª–∏–≤—É–¥–µ", id = 1, cost = 90000000, director = "–ö–≤–µ–Ω—Ç–∏–Ω –¢–∞—Ä–∞–Ω—Ç–∏–Ω–æ"),
    Movietop(name = "1+1", id = 2, cost = 9500000, director = "–û–ª–∏–≤—å–µ –ù–∞–∫–∞—à"),
    Movietop(name = "–ë–æ–π—Ü–æ–≤—Å–∫–∏–π –∫–ª—É–±", id = 3, cost = 63000000, director = "–î—ç–≤–∏–¥ –§–∏–Ω—á–µ—Ä"),
    Movietop(name = "–ë—Ä–∞—Ç", id = 4, cost = 99600, director = "–ê–ª–µ–∫—Å–µ–π –ë–∞–ª–∞–±–∞–Ω–æ–≤"),
    Movietop(name = "–ó–µ–ª–µ–Ω–∞—è –∫–Ω–∏–≥–∞", id = 5, cost = 23000000, director = "–ü–∏—Ç–µ—Ä –§–∞—Ä—Ä–µ–ª–ª–∏"),
    Movietop(name = "–û—Å—Ç—Ä–æ–≤ –ø—Ä–æ–∫–ª—è—Ç—ã—Ö", id = 6, cost = 80000000, director = "–ú–∞—Ä—Ç–∏–Ω –°–∫–æ—Ä—Å–µ–∑–µ"),
    Movietop(name = "–ë–µ—Å—Å–ª–∞–≤–Ω—ã–µ —É–±–ª—é–¥–∫–∏", id = 7, cost = 70000000, director = "–ö–≤–µ–Ω—Ç–∏–Ω –¢–∞—Ä–∞–Ω—Ç–∏–Ω–æ"),
    Movietop(name = "–ñ–º—É—Ä–∫–∏", id = 8, cost = 77000, director = "–ê–ª–µ–∫—Å–µ–π –ë–∞–ª–∞–±–∞–Ω–æ–≤"),
    Movietop(name = "–ö—Ä–∏–º–∏–Ω–∞–ª—å–Ω–æ–µ —á—Ç–∏–≤–æ", id = 9, cost = 8000000, director = "–ö–≤–µ–Ω—Ç–∏–Ω –¢–∞—Ä–∞–Ω—Ç–∏–Ω–æ"),
    Movietop(name = "–†–µ–∫–≤–∏–µ–º –ø–æ –º–µ—á—Ç–µ", id = 10, cost = 4500000, director = "–î–∞—Ä—Ä–µ–Ω –ê—Ä–æ–Ω–æ—Ñ—Å–∫–∏")
]

@app.get("/")
async def root():
    return {"message": "Hello World"}

@app.get("/study",  response_class=HTMLResponse)
async def study_information():
    return study_html

@app.get("/movietop/")
async def get_all_movies():
    return movies_data

@app.get("/movietop/{movie_name}")
async def get_movie(movie_name: str):
    for movie in movies_data:
        if movie.name.lower() == movie_name.lower():
            return movie
    
    return {"error": "–§–∏–ª—å–º –Ω–µ –Ω–∞–π–¥–µ–Ω"}

@app.get("/add-movie/", response_class=HTMLResponse)
async def add_movie_form():
    return add_movie_html

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ä–º—ã —Å –∑–∞–≥—Ä—É–∑–∫–æ–π —Ñ–∞–π–ª–æ–≤
@app.post("/add-movie/")
async def create_movie(
    name: str = Form(...),
    director: str = Form(...),
    cost: int = Form(...),
    description: str = Form(None),
    is_oscar_winner: bool = Form(False),
    image: Annotated[UploadFile, File()] = None
):
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π ID
    new_id = max(movie.id for movie in movies_data) + 1 if movies_data else 1
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    image_filename = None
    if image and image.filename:
        file_extension = image.filename.split('.')[-1]
        image_filename = f"movie_{new_id}.{file_extension}"
        file_path = os.path.join(UPLOAD_DIR, image_filename)
        
        content = await image.read()
        with open(file_path, "wb") as buffer:
            buffer.write(content)
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Ñ–∏–ª—å–º
    new_movie = Movietop(
        id=new_id,
        name=name,
        director=director,
        cost=cost,
        is_oscar_winner=is_oscar_winner,
        description=description,
        image_filename=image_filename
    )
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫
    movies_data.append(new_movie)
    
    return {
        "message": "–§–∏–ª—å–º —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω",
        "movie": new_movie
    }

# –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–æ –≤—Å–µ–º–∏ —Ñ–∏–ª—å–º–∞–º–∏ –∏ –æ–±–ª–æ–∂–∫–∞–º–∏
@app.get("/movies-with-images/", response_class=HTMLResponse)
async def movies_with_images():
    movie_list_html = """
    <!DOCTYPE html>
    <html lang="ru">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>–í—Å–µ —Ñ–∏–ª—å–º—ã —Å –æ–±–ª–æ–∂–∫–∞–º–∏</title>
        <style>
            .movie-card {
                border: 1px solid #ddd;
                padding: 20px;
                margin: 10px;
                border-radius: 10px;
                display: inline-block;
                width: 300px;
                vertical-align: top;
            }
            .movie-image {
                max-width: 100%;
                height: 200px;
                object-fit: cover;
            }
            .oscar-winner {
                color: gold;
                font-weight: bold;
            }
        </style>
    </head>
    <body>
        <h1>–í—Å–µ —Ñ–∏–ª—å–º—ã —Å –æ–±–ª–æ–∂–∫–∞–º–∏</h1>
        <a href="/add-movie/">–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Ñ–∏–ª—å–º</a>
        <br><br>
    """
    
    for movie in movies_data:
        image_html = ""
        if movie.image_filename:
            image_html = f'<img src="/uploads/{movie.image_filename}" class="movie-image" alt="{movie.name}">'
        else:
            image_html = '<div style="height: 200px; background: #f0f0f0; display: flex; align-items: center; justify-content: center;">–ù–µ—Ç –æ–±–ª–æ–∂–∫–∏</div>'
        
        oscar_html = ""
        if movie.is_oscar_winner:
            oscar_html = '<p class="oscar-winner">üèÜ –õ–∞—É—Ä–µ–∞—Ç –ø—Ä–µ–º–∏–∏ –û—Å–∫–∞—Ä</p>'
        
        description_html = ""
        if movie.description:
            description_html = f'<p><strong>–û–ø–∏—Å–∞–Ω–∏–µ:</strong> {movie.description}</p>'
        
        movie_list_html += f"""
        <div class="movie-card">
            <h2>{movie.name}</h2>
            {image_html}
            <p><strong>–†–µ–∂–∏—Å—Å–µ—Ä:</strong> {movie.director}</p>
            <p><strong>–ë—é–¥–∂–µ—Ç:</strong> ${movie.cost:,}</p>
            {oscar_html}
            {description_html}
        </div>
        """
    
    movie_list_html += """
    </body>
    </html>
    """
    
    return HTMLResponse(content=movie_list_html)

# 1. –ú–∞—Ä—à—Ä—É—Ç –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É
@app.get("/login", response_class=HTMLResponse)
async def login_page():
    return login_html

@app.post("/login")
async def login(
    response: Response,
    username: str = Form(...),
    password: str = Form(...)
):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å
    if username not in users or users[username] != password:
        return JSONResponse(
            content={"message": "–ù–µ–≤–µ—Ä–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ"},
            status_code=401
        )
    
    # –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π session_token
    session_token = str(uuid.uuid4())
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–µ—Å—Å–∏—é
    sessions[session_token] = {
        "username": username,
        "created_at": datetime.now(),
        "expires_at": datetime.now() + timedelta(seconds=SESSION_TIME)
    }
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º cookie
    response.set_cookie(
        key="session_token",
        value=session_token,
        httponly=True,
        max_age=SESSION_TIME
    )
    
    return {"message": "–£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥", "user": username}

# 2. –ó–∞—â–∏—â–µ–Ω–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç
@app.get("/user")
async def user_profile(request: Request):
    # –ü–æ–ª—É—á–∞–µ–º cookie
    session_token = request.cookies.get("session_token")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ cookie
    if not session_token:
        return {"message": "Unauthorized"}
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å —Å–µ—Å—Å–∏–∏
    if session_token not in sessions:
        return {"message": "Unauthorized"}
    
    session = sessions[session_token]
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ –∏—Å—Ç–µ–∫–ª–∞ –ª–∏ —Å–µ—Å—Å–∏—è
    if datetime.now() > session["expires_at"]:
        del sessions[session_token]
        return {"message": "Unauthorized"}
    
    # 5. –ü—Ä–æ–¥–ª–µ–≤–∞–µ–º —Å–µ—Å—Å–∏—é –Ω–∞ 2 –º–∏–Ω—É—Ç—ã
    session["expires_at"] = datetime.now() + timedelta(seconds=SESSION_TIME)
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Ñ–∏–ª—å–º—ã
    return {
        "user_info": {
            "username": session["username"],
            "login_time": session["created_at"].isoformat(),
            "session_expires": session["expires_at"].isoformat()
        },
        "movies": [dict(movie) for movie in movies_data]
    }
